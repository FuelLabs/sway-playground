name: CI
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
    inputs:
      build_image:
        description: 'Build and publish Docker image'
        type: boolean
        default: false
env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  REGISTRY: ghcr.io
  RUST_VERSION: 1.70.0
  NODE_VERSION: '16'

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  cargo-fmt-check:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Check Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose -- --check

  cargo-clippy:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v1
      - name: Check Clippy Linter
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features --all-targets -- -D warnings

  cargo-check:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v1
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose

  cargo-test:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.RUST_VERSION }}
      - uses: Swatinem/rust-cache@v1
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all --all-features

  build-and-publish-image:
    if: github.ref == 'refs/heads/master' || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_image == 'true')
    needs:
      - cargo-fmt-check
      - cargo-clippy
      - cargo-check
      - cargo-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/fuellabs/sway-playground
          tags: |
            type=ref,event=branch
            type=sha,prefix=
            type=semver,pattern={{raw}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the image to ghcr.io
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  eslint-check:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run eslint
        run: |
          cd app && npm install
          npm run lint-check

  prettier-check:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run prettier
        run: |
          cd app && npm install
          npm run format-check

  frontend-build-and-test:
    if: github.ref != 'refs/heads/master'
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    # Local docker image registry
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    env:
      LOCAL_REGISTRY: localhost:5000
      LOCAL_TAG: sway-playground:local
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Log in to the local registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.LOCAL_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to local registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ env.LOCAL_REGISTRY }}/${{ env.LOCAL_TAG }}

      - name: Run the service in docker
        run: |
          docker run -d -p 8080:8080 ${{ env.LOCAL_REGISTRY }}/${{ env.LOCAL_TAG }}

      - name: NPM build and test
        env:
          CI: true
        run: |
          cd app
          npm ci
          npm run build
          npm run test

  deploy:
    if: github.ref == 'refs/heads/master'
    needs:
      - build-and-publish-image
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Set Environment Variables
        run: |
          tag=(`echo $GITHUB_SHA | cut -c1-7`)
          echo "IMAGE_TAG=`echo $tag`" >> $GITHUB_ENV

      - name: Deploy Sway Playground Backend Environment
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy Sway Playground on k8s
          repo: FuelLabs/fuel-deployment
          ref: refs/heads/master
          token: ${{ secrets.REPO_TOKEN }}
          inputs: '{ "cluster": "${{ env.CONFIG }}", "deployment-version": "${{ github.sha }}", "image-version": "${{ env.IMAGE_TAG }}" }'
        env:
          CONFIG: 'fuel-prod-1'
